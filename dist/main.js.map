{"version":3,"sources":["before-after-slider.js","form-register.js","maps.js","slider.js","swiper.js"],"names":["beforeAfterSlide","document","querySelectorAll","bearSlider","item","BeerSlider","start","prefix","customSliding","addEventListener","event","rect","target","getBoundingClientRect","x","clientX","left","children","style","width","e","forEach","preventDefault","stopPropagation","parentElement","getAttribute","initialBtn","querySelector","options","initialInput","data","validationObj","name","phone","validationMsgs","placeholderText","checkValidation","input","val","value","nameAttr","trim","length","Object","keys","sendForm","appendGeneralError","replaceField","appendHtmlField","fetch","method","body","JSON","stringify","then","response","console","log","ok","json","status","sucessDiv","createElement","className","innerHTML","appendChild","catch","error","message","mainField","errorField","classList","add","parentNode","insertBefore","nextSibling","currentInput","activeOptionName","replaceFormFields","callCompleteField","attributeName","submitBtn","inputLabel","setAttribute","setTypeStatus","inputName","attr","addActiveClass","removeErrorFields","remove","initMap","address","lat","lng","iconBase","url","scaledSize","google","maps","Size","map","Map","getElementById","zoom","center","styles","featureType","elementType","stylers","color","lightness","weight","visibility","saturation","disableDefaultUI","Marker","position","icon","this","window","desktopScreen","slideWidth","innerWidth","transitionNum","desktopFuncions","blocks","removeClass","handleTouchStart","handleTouchMove","scaleBlocks","inactiveBtns","hideListOnDesktop","testimonialsSlider","mobileFunctions","listBtns","index","contains","display","sibling","getComputedStyle","setTimeout","showListOnAction","hideListOnAction","displayListOnMobile","sliderWidth","isMobile","swiperContainer","itemsCount","slidesPerPage","arrowRight","arrowLeft","transitionItem","slider","number","transform","getActiveIndex","currentSlider","currentIndex","parseInt","changeDataActive","newIndex","removeAttribute","swiperItems","activeIndex","swiper","Swiper","effect","grabCursor","centeredSlides","slidesPerView","loop","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","pagination","el","clickable","breakpoints","768","spaceBetween","1124"],"mappings":"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","file":"main.js","sourcesContent":["\r\nvar beforeAfterSlide = document.querySelectorAll(\"#before-after-slide\");\r\n\r\nbeforeAfterSlide.forEach(item => {\r\n  bearSlider(item);\r\n  item.addEventListener(\"click\", function(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  })\r\n  item.addEventListener(\"mouseenter\", function() {\r\n    if(item.parentElement.getAttribute('data-type') === 'active' || item.getAttribute('data-type') === 'slide-active') {\r\n    customSliding(item);\r\n      return;\r\n    }\r\n  })\r\n});\r\n    // new BeerSlider( item, {\r\n    //   // start value\r\n    //   start: '50',\r\n    //   // prefix \r\n    //   prefix: 'beer'\r\n    // });\r\n// )\r\n\r\n\r\nfunction bearSlider(item) {\r\n  new BeerSlider( item, {\r\n    // start value\r\n    start: '50',\r\n    // prefix \r\n    prefix: 'beer'\r\n  });\r\n}\r\n\r\n\r\nfunction customSliding(item) {\r\n  // item.addEventListener(\"mouseenter\", function(e) {\r\n      item.addEventListener(\"mousemove\", function (event) {\r\n        var rect = event.target.getBoundingClientRect();\r\n        var x = event.clientX - rect.left; //x position within the element.\r\n        item.children[3].style.left = `${x}px`;\r\n        item.children[1].style.width = `${x}px`;\r\n      });\r\n      item.addEventListener(\"mouseleave\", function(e) {\r\n        item.children[3].style.left = '50%';\r\n        item.children[1].style.width = '50%';\r\n      });\r\n  // })\r\n\r\n  // let x1 = null;\r\n  // function handleTouchStart(event) {\r\n  //   const firstTouch = event.touches[0];\r\n  //   x1 = firstTouch.clientX\r\n  // }\r\n\r\n  // function handleTouchMove(event) {\r\n  //   if (!x1) {\r\n  //       return false;\r\n  //   }\r\n  //   let x2 = event.touches[0].clientX;\r\n  //   let xDiff = x2 - x1;\r\n  //   if (xDiff > 0) {\r\n  //       moveSliderLeft();\r\n  //   } else {\r\n  //       moveSliderRigth();\r\n  //   }\r\n}\r\n\r\n\r\n\r\n\r\n","\r\nlet initialBtn = document.querySelector('.input-wrap .submit');\r\nlet options = document.querySelectorAll('.form-options div[data-type]');\r\nlet initialInput = document.querySelector('.input-wrap > input');\r\nlet data = {};\r\n\r\n\r\nlet validationObj = {\r\n    name: [\r\n        '/^$|\\\\s+/', \r\n        '/^[a-zA-Z]$/'\r\n    ],\r\n    phone: [\r\n        '[^\\\\s]*',\r\n        '/^([\\+]370 ?[0-9]{3} ?[0-9]{2} ?[0-9]{3}$|8 ?6 ?[0-9] ?[0-9] ?[0-9] ?[0-9] ?[0-9] ?[0-9] ?[0-9] ?)$/'\r\n    ]\r\n}\r\n\r\nlet validationMsgs = {\r\n    name: [\"Laukelis privalomas.\",  \"Neteisingas formatas.\"],\r\n    phone: [\"Laukelis privalomas.\",  \"Neteisingas formatas.\"]\r\n}\r\n\r\nlet placeholderText = {\r\n    name: 'Vardas',\r\n    phone: 'Tel. nr.'\r\n}\r\n\r\nif(initialBtn) {\r\n    initialBtn.addEventListener(\"click\", function(){\r\n        removeErrorFields();\r\n        //verify if input value correct\r\n        let input = document.querySelector('.input-wrap input');\r\n        checkValidation(input);\r\n    })\r\n}\r\n\r\nif(options) {\r\n    options.forEach(item => {\r\n        item.addEventListener(\"click\", () => {\r\n            let dataName = item.getAttribute(\"data-type\");\r\n            replaceFormFields(dataName)\r\n        })\r\n    })\r\n}\r\n\r\nif(initialInput) {\r\n    initialInput.addEventListener(\"focus\", function() {\r\n        addActiveClass(document.querySelector('[data-type='+ this.getAttribute('name') +']'))\r\n    })\r\n\r\n    initialInput.addEventListener(\"focusout\", function() {\r\n        if(this.value === '') {\r\n            // addActiveClass(document.querySelector('[data-type='+ this.getAttribute('name') +']'))\r\n            this.className = '';\r\n        }\r\n    })\r\n}\r\n\r\nfunction checkValidation(input) {\r\n    let val = input.value;\r\n    let nameAttr = input.getAttribute(\"name\");\r\n    let regexFields = validationObj[nameAttr];\r\n    if(val.trim().length === 0) {\r\n        appendHtmlField( validationMsgs[nameAttr][0], 'error-message', input)\r\n        return;\r\n    } \r\n        // if(nameAttr === 'phone') {\r\n        //     appendHtmlField( validationMsgs[nameAttr][1], 'error-message', input)\r\n        // }  \r\n    if (typeof(val) != 'string') {\r\n        appendHtmlField( validationMsgs[nameAttr][1], 'error-message', input)\r\n        return;\r\n    } \r\n\r\n    data[nameAttr] = val;\r\n\r\n    if(input.getAttribute(\"name\") !== \"phone\") {\r\n        replaceField(input);\r\n        return;\r\n    } else if(options.length !== Object.keys(data).length) {\r\n        appendGeneralError();\r\n        return;\r\n    }\r\n    sendForm();   \r\n}\r\n\r\nfunction sendForm(){\r\n\r\n        fetch(\"../laminatesdantu/src/smartsheet/registration.php\", {\r\n            method: 'POST',\r\n            body: JSON.stringify(data)\r\n        }).then(function(response) {\r\n            console.log(response)\r\n            if (response.ok) {\r\n                return response.json();\r\n            } else {\r\n                appendGeneralError();\r\n            }\r\n        }).then(function(response){\r\n            console.log(response)\r\n            if(response.status == '200'){\r\n                let sucessDiv = document.createElement(\"div\");\r\n                sucessDiv.className = 'success-block';\r\n                sucessDiv.innerHTML = `<div>\r\n                                            <h3>Jūs sėkmingai užsiregistravote</h3>\r\n                                            <h3 class=\"main-text\">konsultacijai dėl naujos šypsenos!</h3>\r\n                                        </div>\r\n                                        <img src=\"src/images/checkmark.svg\">`;\r\n                document.querySelector('.form-main-wrap').appendChild(sucessDiv);\r\n                // appendHtmlField(response.message, 'success-message', formBtn)\r\n                // setTimeout(() => {\r\n                //     document.querySelector('.success-message').remove();\r\n                // }, 10000);\r\n            } else {\r\n                appendGeneralError();\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error)\r\n            appendGeneralError();\r\n        })\r\n}\r\n     \r\n\r\nfunction appendHtmlField(message, className, mainField){\r\n    let errorField = document.createElement('div');\r\n    errorField.classList.add(className);\r\n    errorField.innerHTML = `<p>${message}</p>`;\r\n    mainField.parentNode.insertBefore(errorField, mainField.nextSibling);\r\n}\r\n\r\nfunction replaceField(currentInput){\r\n    let activeOptionName = currentInput.getAttribute('name')\r\n    if(activeOptionName) {\r\n        let callInputName = activeOptionName === 'name' ? 'phone' : 'name';\r\n        replaceFormFields(callInputName)\r\n    }\r\n}\r\n\r\n\r\nfunction callCompleteField() {\r\n    let completeFields = document.querySelectorAll('.complete');\r\n    completeFields.forEach(item => {\r\n        let attribute = item.getAttribute(\"data-type\");\r\n        replaceFormFields(attribute);\r\n    })\r\n}\r\n\r\nfunction replaceFormFields(attributeName) {\r\n    let submitBtn = document.querySelector('.input-wrap span');\r\n    let inputLabel = document.querySelector(\".input-wrap p\")\r\n    let currentInput = document.querySelector('.input-wrap input');\r\n    currentInput.setAttribute(\"name\", attributeName);\r\n    currentInput.value = data[attributeName] ? data[attributeName] : '';\r\n    submitBtn.setAttribute(\"data-type\", attributeName);\r\n    inputLabel.innerHTML = placeholderText[attributeName];\r\n    setTypeStatus(attributeName)\r\n}\r\n\r\nfunction setTypeStatus(inputName){\r\n    options.forEach(item => {\r\n        let attr = item.getAttribute(\"data-type\");\r\n        if(attr === inputName) {\r\n            item.className = \"active\";\r\n            return;\r\n        } else if(data[attr]){\r\n            item.className = \"complete\";\r\n            return;\r\n        }\r\n        item.className = \"\";\r\n    })\r\n}\r\n\r\nfunction addActiveClass(item){\r\n    item.className = 'active';\r\n}\r\n\r\nfunction removeErrorFields(){\r\n    document.querySelectorAll('.error-message').forEach(item => {\r\n        item.remove();\r\n    })\r\n}\r\n\r\nfunction appendGeneralError(){\r\n    let inputField = document.querySelector('.input-wrap input');\r\n    let errorMsg = 'Atsiprašome, įvyko klaida.';\r\n    appendHtmlField(errorMsg, 'error-message', inputField)\r\n}\r\n\r\n","// Initialize and add google map\r\nfunction initMap() {\r\n\r\n    const mapStyle = [\r\n        {\r\n            \"featureType\": \"water\",\r\n            \"elementType\": \"geometry\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#e9e9e9\"\r\n                },\r\n                {\r\n                    \"lightness\": 17\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"landscape\",\r\n            \"elementType\": \"geometry\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#f5f5f5\"\r\n                },\r\n                {\r\n                    \"lightness\": 20\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"road.highway\",\r\n            \"elementType\": \"geometry.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#ffffff\"\r\n                },\r\n                {\r\n                    \"lightness\": 17\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"road.highway\",\r\n            \"elementType\": \"geometry.stroke\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#ffffff\"\r\n                },\r\n                {\r\n                    \"lightness\": 29\r\n                },\r\n                {\r\n                    \"weight\": 0.2\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"road.arterial\",\r\n            \"elementType\": \"geometry\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#ffffff\"\r\n                },\r\n                {\r\n                    \"lightness\": 18\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"road.local\",\r\n            \"elementType\": \"geometry\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#ffffff\"\r\n                },\r\n                {\r\n                    \"lightness\": 16\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"poi\",\r\n            \"elementType\": \"geometry\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#f5f5f5\"\r\n                },\r\n                {\r\n                    \"lightness\": 21\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"poi.park\",\r\n            \"elementType\": \"geometry\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#dedede\"\r\n                },\r\n                {\r\n                    \"lightness\": 21\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"elementType\": \"labels.text.stroke\",\r\n            \"stylers\": [\r\n                {\r\n                    \"visibility\": \"on\"\r\n                },\r\n                {\r\n                    \"color\": \"#ffffff\"\r\n                },\r\n                {\r\n                    \"lightness\": 16\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"elementType\": \"labels.text.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"saturation\": 36\r\n                },\r\n                {\r\n                    \"color\": \"#333333\"\r\n                },\r\n                {\r\n                    \"lightness\": 40\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"elementType\": \"labels.icon\",\r\n            \"stylers\": [\r\n                {\r\n                    \"visibility\": \"off\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"transit\",\r\n            \"elementType\": \"geometry\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#f2f2f2\"\r\n                },\r\n                {\r\n                    \"lightness\": 19\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"administrative\",\r\n            \"elementType\": \"geometry.fill\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#fefefe\"\r\n                },\r\n                {\r\n                    \"lightness\": 20\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"featureType\": \"administrative\",\r\n            \"elementType\": \"geometry.stroke\",\r\n            \"stylers\": [\r\n                {\r\n                    \"color\": \"#fefefe\"\r\n                },\r\n                {\r\n                    \"lightness\": 17\r\n                },\r\n                {\r\n                    \"weight\": 1.2\r\n                }\r\n            ]\r\n        }\r\n    ];\r\n\r\n    const address = { lat: 54.740465, lng: 25.226939 };\r\n    let iconBase = {\r\n        url: 'src/images/marker.png',\r\n        scaledSize: new google.maps.Size(122, 122),\r\n    };\r\n    const map = new google.maps.Map(document.getElementById(\"map\"), {\r\n        zoom: 15,\r\n        center: address,\r\n        styles: mapStyle,\r\n        disableDefaultUI: true\r\n    });\r\n    const marker = new google.maps.Marker({\r\n        position: address,\r\n        map: map,\r\n        icon: iconBase\r\n    });\r\n}\r\n","\r\nwindow.addEventListener(\"load\", function() {\r\n    let initialIndex = 1;\r\n    let desktopScreen = 991;\r\n    let slideWidth = window.innerWidth >= desktopScreen ? 33.3 : 100;\r\n    let initialTransition = 0;\r\n    let transitionNum = initialTransition;\r\n\r\n    if(window.innerWidth > desktopScreen) {\r\n        desktopFuncions()\r\n    } else {\r\n        mobileFunctions()\r\n    }\r\n\r\n    window.addEventListener(\"resize\", function(){\r\n        slideWidth = window.innerWidth >= desktopScreen ? 40 : 100;\r\n        if(window.innerWidth > desktopScreen) {\r\n            desktopFuncions()\r\n        } else {\r\n            mobileFunctions()\r\n        }\r\n    });\r\n\r\n    function desktopFuncions(){\r\n        scaleBlocks()\r\n        hideListOnDesktop()\r\n        testimonialsSlider(33.3)\r\n    }\r\n\r\n    function mobileFunctions(){\r\n        displayListOnMobile()\r\n        testimonialsSlider(100, true)\r\n    }\r\n\r\n    function displayListOnMobile(){\r\n        // display list on mobile\r\n        let listBtns = document.querySelectorAll('.swiper-wrapper .list-content h2');\r\n        listBtns.forEach(function(item) {\r\n            item.classList.add(\"inactiveList\");\r\n        })\r\n\r\n\r\n        document.querySelector('.swiper-container').addEventListener(\"click\", function(){\r\n            document.querySelectorAll('.swiper-slide').forEach(function(item, index){\r\n                if(!item.classList.contains('.swiper-slide-active')) {\r\n                    listBtns[index].nextSibling.nextSibling.style.display = \"none\";\r\n                }\r\n            })\r\n        })\r\n    \r\n        \r\n        let inactiveBtns = document.querySelectorAll('.inactiveList');\r\n        inactiveBtns.forEach(function(item, index){\r\n            item.addEventListener(\"click\", function(){\r\n                let sibling =  item.nextSibling.nextSibling;\r\n                let siblingStyle = window.getComputedStyle(sibling).display;\r\n            \r\n                if(siblingStyle === \"none\"){\r\n                    item.classList.add(\"activeList\")\r\n                    item.classList.remove(\"inactiveList\")\r\n                } else {\r\n                    item.classList.remove(\"activeList\")\r\n                    item.classList.add(\"inactiveList\")\r\n                }\r\n            \r\n                setTimeout(function(){\r\n                    if(item.className === \"activeList\") {\r\n                        listBtns.forEach(item => {\r\n                            showListOnAction(inactiveBtns)\r\n                        })\r\n                    \r\n                    } else {\r\n                        listBtns.forEach(item => {\r\n                            hideListOnAction(inactiveBtns)\r\n                        })\r\n                    }\r\n                }, 100)\r\n            \r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    function hideListOnAction(inactiveBtns) {\r\n        inactiveBtns.forEach(function(item){\r\n            item.nextSibling.nextSibling.style.display = \"none\";\r\n        })\r\n        \r\n    }\r\n\r\n    function showListOnAction(inactiveBtns) {\r\n        // let inactiveBtns = document.querySelectorAll('.activeList');\r\n        inactiveBtns.forEach(function(item){\r\n            item.nextSibling.nextSibling.style.display = \"block\";\r\n        })\r\n        \r\n    }\r\n\r\n    function hideListOnDesktop(){\r\n        let inactiveBtns = document.querySelectorAll('.inactiveList');\r\n\r\n        if(inactiveBtns) {\r\n            inactiveBtns.forEach(function(item) {\r\n                item.classList.remove(\"inactiveList\");\r\n                item.classList.remove(\"activeList\");\r\n            })\r\n        }\r\n    }\r\n\r\n    function scaleBlocks(){\r\n        let blocks = document.querySelectorAll('.stories-section .before-after-blocks');\r\n        blocks.forEach(item => {\r\n            item.addEventListener(\"mouseover\", function() {\r\n                removeClass(\"active\", blocks)\r\n                item.classList.add(\"active\");\r\n            })\r\n\r\n            item.addEventListener(\"mousedown\", function() {\r\n\r\n            })\r\n            // swipe:\r\n            item.addEventListener('mousedown', handleTouchStart, false);\r\n            item.addEventListener('mousedown', handleTouchMove, false);\r\n        })\r\n    }\r\n\r\n    function removeClass(className, blocks) {\r\n        blocks.forEach(item => {\r\n            item.classList.remove(className);\r\n        })\r\n    }\r\n\r\n\r\n    function testimonialsSlider(sliderWidth, isMobile = false) {\r\n        // CUSTOM TESTIMONIALS SLIDER\r\n        let mainWrapper = document.querySelector(\".t-slider-main-wrap\");\r\n        let swiperContainer = document.querySelector(\".t-slider-inner\");\r\n        let swiperItems = document.querySelectorAll(\".t-item\");\r\n        let itemsCount = swiperItems.length;\r\n        window.addEventListener(\"resize\", function() {\r\n            if(window.innerWidth < 991) {\r\n                slidesPerPage = 1;\r\n                sliderWidth = 100;\r\n            } else {\r\n                slidesPerPage = 3;\r\n                sliderWidth = 33.3;\r\n            }\r\n        });\r\n\r\n        let arrowRight =  document.querySelector(\".arrowRight\");\r\n        let arrowLeft =  document.querySelector(\".arrowLeft\");\r\n\r\n        arrowRight.addEventListener(\"click\", slideRight)\r\n        arrowLeft.addEventListener(\"click\", slideLeft)\r\n\r\n\r\n\r\n        // slide to right and add slide if loop finished\r\n        function slideRight(){\r\n            let swiperItems = document.querySelectorAll(\".t-item\");\r\n            let activeIndex = getActiveIndex(swiperItems)\r\n            if(activeIndex === itemsCount - 1) {\r\n                transitionItem(swiperContainer, initialTransition)\r\n                changeDataActive(swiperItems, initialIndex)\r\n                return;\r\n            }\r\n            let newTransition = transitionNum - sliderWidth;\r\n            transitionItem(swiperContainer, newTransition)\r\n            let newActiveIndex = activeIndex + 1;\r\n            changeDataActive(swiperItems, newActiveIndex)\r\n        }\r\n\r\n        // slide to right and add slide if loop finished\r\n        function slideLeft(){\r\n            let swiperItems = document.querySelectorAll(\".t-item\");\r\n            let activeIndex = getActiveIndex(swiperItems)\r\n            if((activeIndex > 0 && !isMobile) || (isMobile && transitionNum < 0)) {\r\n                let newTransition = transitionNum + sliderWidth;\r\n                transitionItem(swiperContainer, newTransition)\r\n                let newActiveIndex = activeIndex - 1;\r\n                changeDataActive(swiperItems, newActiveIndex)\r\n            } \r\n        }\r\n\r\n        function transitionItem(slider, number){\r\n            transitionNum = number;\r\n            slider.style.transform = `translate(${ number }%)`;\r\n        }\r\n\r\n\r\n        function getActiveIndex(currentSlider) {\r\n            let currentIndex = 0;\r\n            currentSlider.forEach(function(item, index) {\r\n                if(item.getAttribute(\"data-type\") === \"active\") {\r\n                    currentIndex = index;\r\n                    return;\r\n                } \r\n            })\r\n            return parseInt(currentIndex);\r\n        }\r\n\r\n        function changeDataActive(currentSlider, newIndex) {\r\n            currentSlider.forEach(function(item, index) {\r\n                if(newIndex === index) {\r\n                    item.setAttribute(\"data-type\", \"active\")\r\n                    return;\r\n                } \r\n                item.removeAttribute(\"data-type\")\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n});","\r\n// init Swiper:\r\nconst swiper = new Swiper('.swiper-container', {\r\n        effect: \"coverflow\",\r\n        // paginationClickable: true,\r\n        grabCursor: true,\r\n        centeredSlides: true,\r\n        slidesPerView: 1,\r\n        loop: true,\r\n        // pagination: '.swiper-pagination',\r\n        // pagination: '.swiper-pagination',\r\n        // paginationClickable: true,\r\n        // pagination: {\r\n        //   el: '.swiper-pagination',\r\n        //   type: 'bullets',\r\n        //   clickable: true\r\n        // },\r\n\r\n        // clickableClass: '.swiper-pagination',\r\n        // pagination: {\r\n        //   el: '.swiper-pagination',\r\n        //   clickable: true,\r\n        // },\r\n        coverflowEffect: {\r\n          rotate: 50,\r\n          stretch: 0,\r\n          depth: 100,\r\n          modifier: 1,\r\n          slideShadows: true,\r\n        },\r\n        pagination: {\r\n          el: \".swiper-pagination\",\r\n          clickable: true,\r\n        },\r\n        breakpoints: {\r\n          768 : {\r\n            slidesPerView: 1,\r\n            spaceBetween: 20\r\n          }\r\n        },\r\n        breakpoints: {\r\n          1124 : {\r\n            slidesPerView: 3,\r\n            spaceBetween: 5\r\n          }\r\n        }\r\n});\r\n"]}